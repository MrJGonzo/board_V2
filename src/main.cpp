#include <Arduino.h>

const int test[8]={B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111};
const int a[8]={B00111100,B01000010,B01000010,B01111110,B01000010,B01000010,B01000010,B01000010};
const int b[8]={B01111100,B01000010,B01000010,B01111100,B01000010,B01000010,B01000010,B01111100};
const int c[8]={B00111110,B01000000,B01000000,B01000000,B01000000,B01000000,B01000000,B00111110};
const int d[8]={B01111100,B01000010,B01000010,B01000010,B01000010,B01000010,B01000010,B01111100};
const int e[8]={B01111110,B01000000,B01000000,B01111000,B01000000,B01000000,B01000000,B01111110};
const int f[8]={B01111110,B01000000,B01000000,B01111000,B01000000,B01000000,B01000000,B01000000};
const int g[8]={B00111100,B01000010,B01000010,B01000000,B01001110,B01000010,B01000010,B00111100};
const int h[8]={B01000010,B01000010,B01000010,B01111110,B01000010,B01000010,B01000010,B01000010};
const int i[8]={B01111100,B00010000,B00010000,B00010000,B00010000,B00010000,B00010000,B01111100};
const int j[8]={B00000010,B00000010,B00000010,B00000010,B00000010,B00000010,B01000010,B00111100};
const int k[8]={B01000100,B01001000,B01010000,B01100000,B01010000,B01001000,B01000100,B01000010};
const int l[8]={B01000000,B01000000,B01000000,B01000000,B01000000,B01000000,B01000000,B01111110};
const int m[8]={B01000010,B01100110,B01011010,B01000010,B01000010,B01000010,B01000010,B01000010};
const int n[8]={B01000010,B01100010,B01010010,B01001010,B01000110,B01000010,B01000010,B01000010};
const int o[8]={B00111100,B01000010,B01000010,B01000010,B01000010,B01000010,B01000010,B00111100};                
const int p[8]={B00111100,B01000010,B01000010,B01111100,B01000000,B01000000,B01000000,B01000000};
const int q[8]={B00111100,B01000010,B01000010,B01000010,B01000010,B01001010,B01000100,B00111011};
const int r[8]={B00111100,B01000010,B01000010,B01111100,B01010000,B01001000,B01000100,B01000100};
const int s[8]={B00111100,B01000010,B01000000,B00111100,B00000010,B00000010,B01000010,B00111100};
const int t[8]={B01111100,B00010000,B00010000,B00010000,B00010000,B00010000,B00010000,B00010000};
const int u[8]={B01000010,B01000010,B01000010,B01000010,B01000010,B01000010,B01000010,B00111100};
const int v[8]={B01000010,B01000010,B01000010,B01000010,B01000010,B01000010,B00100100,B00011000};
const int w[8]={B01000010,B01000010,B01000010,B01000010,B01000010,B01011010,B01100110,B01000010};
const int x[8]={B01000010,B01000010,B00100100,B00011000,B00011000,B00100100,B01000010,B01000010};
const int y[8]={B01000100,B01000100,B00101000,B00010000,B00010000,B00010000,B00010000,B00010000};
const int z[8]={B01111110,B00000100,B00001000,B00010000,B00100000,B01000000,B01000000,B01111110};

int latchPin = 4; // pis connected to shift registors
int clockPin = 5;
int dataPin = 3;
int pins [8] = {39, 41, 43, 45, 47, 49, 51, 53}; // common cathode pins

void display_char( int ch[8]) { // Method do the multiplexing

  for (int j = 0; j < 8; j++) {
    digitalWrite(latchPin, LOW);
    digitalWrite(pins[j], LOW);

    shiftOut(dataPin, clockPin, LSBFIRST, ch[j]);
    digitalWrite(latchPin, HIGH);
    //delay(1);
    digitalWrite(latchPin, LOW);
    shiftOut(dataPin, clockPin, LSBFIRST, B00000000); // to get rid of flicker when
    digitalWrite(latchPin, HIGH);
    digitalWrite(pins[j], HIGH);

  }


}

/*----------------------------------------------------*/

void recorre(){

  for (int k = 0; k < 3000; k++) { // showing each letter for 1 second
    display_char(test);
  }

}

/*----------------------------------------------------*/

void setup() {

  Serial.begin(9600); // Serial begin
  
  pinMode(latchPin, OUTPUT); // Pin configuration
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
  
  for (int i = 0; i < 8; i++) { // for loop is used to configure common cathodes
    pinMode(pins[i], OUTPUT);
    digitalWrite(pins[i], HIGH);
  }

}

/*----------------------------------------------------*/

void loop() {

recorre();

}


